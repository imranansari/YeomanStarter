@import "base";

body {
  font: 100%/1.4 Verdana, Arial, Helvetica, sans-serif;
  background: #FFFFFF;
  margin: 0;
  padding: 0 0 100px 0;
  color: #000;

  // fixed width container surrounds all other blocks
  .container {

    //desktop
    @media only screen and (min-width: 769px){
      width: 960px;
    }

    //tablet
    @media only screen and (min-width: 321px) and (max-width: 768px){
      width: 700px;
    }

    //phone
    @media only screen and (min-width: 0px) and (max-width: 320px){
      width: 300px;
    }

    background: #FFFFFF;
    margin: 0 auto; // the auto value on the sides, coupled with the width, centers the layout
  }
}
// Element/tag selectors
ul, ol, dl {
  // Due to variations between browsers, it's best practices to zero padding and margin on lists.
  // For consistency, you can either specify the amounts you want here, or on the list items (LI, DT, DD) they contain.
  // Remember that what you do here will cascade to the .nav list unless you write a more specific selector.
  padding: 0;
  margin: 0;
}


a{
  img {
    // removes the default blue border displayed in some browsers
    // around an image when it is surrounded by a link
    border: none;
  }
  // Styling links must remain in this order
  // including the group of selectors that create the hover effect
  &:link {
    color: #42413D;
    //text-decoration: underline;
    // it's best to provide underlines for quick visual identification
    // but this is not the LFG way
  }
  &:visited {
    color: #42413D;
    //text-decoration: underline;
  }
  &:hover,&:active,&:focus {
    // give a keyboard navigator the same hover experience
    // as the person using a mouse.
    text-decoration: none;
  }
}

// no width to extend the full width of the layout
header {
  background-color: $HeaderGradientBottom;
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($HeaderGradientTop), to($HeaderGradientBottom));
  background: -moz-linear-gradient(top, $HeaderGradientTop 0%, $HeaderGradientBottom 100%);
  height:80px;
}
.LFG_logo{
  padding:10px 9px 0 18px;
}


// the columns for the layout.
// 1) Padding is only placed on the top and/or bottom of the block elements.
//    The elements within these blocks have padding on their sides. This saves you from any "box model math".
//    Keep in mind, if you add any side padding or border to the block itself, it will be added to the width
//    you define to create the *total* width. You may also choose to remove the padding on the element in the block
//    element and place a second block element within it with no width and the padding necessary for your design.

//2) No margin has been given to the columns since they are all floated. If you must add margin,
//   avoid placing it on the side you're floating toward (for example: a right margin on a block set to float right).
//   Many times, padding can be used instead. For blocks where this rule must be broken, you should add a "display:inline"
//   declaration to the block element's rule to tame a bug where some versions of Internet Explorer double the margin.

//3) Since classes can be used multiple times in a document (and an element can also have multiple classes applied),
//   the columns have been assigned class names instead of IDs. For example, two sidebar blocks could be stacked if necessary.
//   These can very easily be changed to IDs if that's your preference, as long as you'll only be using them once per document.

//4) If you prefer your nav on the left instead of the right, simply float these columns the opposite direction
//   (all left instead of all right) and they'll render in reverse order. There's no need to move the blocks around in
//   the HTML source.


.content {
  padding: 10px 0;
  width: 98%;
  float: left;
  // This grouped selector gives the lists in the .content area space
  ul, ol {
    padding: 0 15px 15px 40px;
    // this padding mirrors the right padding in the headings and paragraph rule above.
    // Padding was placed on the bottom for space between other elements on the lists and on
    // the left to create the indention
  }
}


nav {

  //tablet and  larger
  @media only screen and (min-width: 521px) {
    width: 100%;
  }
  //phone
  @media only screen and (max-width: 520px){
    width: 120%;
  }

  //font: 1.5em;

  ul {
    list-style: none;           // remove the list marker

    li {
      text-align: center;
      height: 45px;

      background-color: $LightGrayButtonGradientBottom_m;
      background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($LightGrayButtonGradientTop_m), to($LightGrayButtonGradientBottom_m), color-stop(.5,$LightGrayButtonGradientMiddle_m));
      background: -moz-linear-gradient(top, $LightGrayButtonGradientTop_m 0%, $LightGrayButtonGradientMiddle_m 50%, $LightGrayButtonGradientBottom_m 100%);

      border: 1px solid $LincolnBlack;
      -webkit-border-radius: 5px;
      -moz-border-radius: 5px;

      //tablet
      @media only screen and (min-width: 521px) {
        float:right;
        margin-right: .5em;
      }
      //phone
      @media only screen and (max-width: 520px){
        margin-bottom: .5em;
      }

    }
    a, &:link ,&:visited {
      display: block;   // makes the whole li clickable

      padding: .625em;
      text-decoration: none;
      color: $LincolnBlack;

      &:hover, &:active, &:focus {
        // changes the text color for both mouse and keyboard navigators (focus)
        color: #FFF;
      }
    }

  }
}

// the footer
/*
footer {
  padding: 10px 0;
  margin-bottom: 10px;
  color: #FFF;
  font-size: .8em;
  background: $FooterBurgundyBackground;
  position: relative; // this gives IE6 hasLayout to properly clear
  clear: both; // this clear property forces the .container to understand where the columns end and contain them
}
*/


/*Footer*/
footer {
  padding: 10px 0;
  margin-bottom: 10px;
  color: #FFF;
  font-size: .8em;
  background: $FooterBurgundyBackground;
  color: #fff;
  //text-align: center;
  //text-transform: uppercase;
  position: relative; // this gives IE6 hasLayout to properly clear
  clear: both; // this clear property forces the .container to understand where the columns end and contain them
}
footer > div {
  max-width: 65em;
  margin: 0 auto;
  padding: 0 1em 0;
  text-align: left;
  overflow: hidden;
  -webkit-animation: fadein 0.4s ease-out 1;
  -moz-animation: fadein 0.4s ease-out 1;
  -ms-animation: fadein 0.4s ease-out 1;
}
footer a:hover, .footer a:focus {
  color: #fff;
  background-image: -webkit-radial-gradient(ellipse closest-side, rgba(255,255,255,0.1), rgba(255,255,255,0));
  background-image: -moz-radial-gradient(ellipse closest-side, rgba(255,255,255,0.1), rgba(255,255,255,0));
  background-image: -ms-radial-gradient(ellipse closest-side, rgba(255,255,255,0.1), rgba(255,255,255,0));
  background-image: -o-radial-gradient(ellipse closest-side, rgba(255,255,255,0.1), rgba(255,255,255,0));
}
footer .nav {
  margin: 0;
}
footer .nav li a {
  padding: 0.8em 0.8em 0.5em;
}
footer ul {
  margin-bottom: 1em;
}
footer li {
  display: inline-block;
}
footer li a {
  padding-top: 1.2em;
}


.LegalTextDisclaimer{
  font-size: .8em;
  text-align: left;
}


// float/clear classes
.fltrt {
  // this class can be used to float an element right in your page.
  // The floated element must precede the element it should be next to on the page.
  float: right;
  margin-left: 8px;
}
.fltlft {
  // this class can be used to float an element left in your page.
  // The floated element must precede the element it should be next to on the page.
  float: left;
  margin-right: 8px;
}
.clearfloat {
  // this class can be placed on a <br /> or empty block element as the final element following the last floated
  // block (within the .container) if the footer is removed or taken out of the .container
  clear:both;
  height:0;
  font-size: 1px;
  line-height: 0px;
}

// HTML 5 support - Sets new HTML 5 tags to display:blocks
// so browsers know how to render the tags properly.
header, section, footer, aside, nav, article, figure {
  display: block;
}

// Because all the columns are floated, this layout uses a clear:both declaration in the footer rule.
// This clearing technique forces the .container to understand where the columns end in order to show any borders
// or background colors you place on the .container. If your design requires you to remove the footer from the .container,
// you'll need to use a different clearing method. The most reliable will be to add a
//  &lt;br class=&quot;clearfloat&quot; /&gt; or &lt;div  class=&quot;clearfloat&quot;&gt;&lt;/div&gt; after your final floated column
// (but before the .container closes). This will have the same clearing effect.

// An image placeholder was used in this layout in the header where you'll likely want to place  a logo. It is recommended that
// you remove the placeholder and replace it with your own linked logo.
// Be aware that if you use the Property inspector to navigate to your logo image using the SRC field (instead of removing and
// replacing the placeholder), you should remove the inline background and display properties. These inline styles are only used
// to make the logo placeholder show up in browsers for demonstration purposes. </p>
// To remove the inline styles, make sure your CSS Styles panel is set to Current. Select the image, and in the Properties
// pane of the CSS Styles panel, right click and delete the display and background properties. (Of course, you can always go
// directly into the code and delete the inline styles from the image or placeholder there.)


//brad frost css below

#menu-container {
  background: #333;
  color: #fff;
  position: relative;
  top: 0;
  left: 0;
  z-index: 2;
  text-align: left;
  padding: 1em;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
#close-menu {
  color: #fff;
  position: absolute;
  top: 1em;
  right: 1em;
  text-transform: uppercase;
  display: none;
}

#menu-container {
  position: fixed;
  top: auto;
  padding: 1em 1em 4em;
  bottom: 0;
  left: 0;
  width: 100%;
  -webkit-transition: bottom 0.3s ease-out;
  -moz-transition: bottom 0.3s ease-out;
  -webkit-transition: bottom 0.3s ease-out;
  -ms-transition: bottom 0.3s ease-out;
  -o-transition: bottom 0.3s ease-out;
  transition:  bottom 0.3s ease-out;
}
#close-menu {
  display: block;
}

